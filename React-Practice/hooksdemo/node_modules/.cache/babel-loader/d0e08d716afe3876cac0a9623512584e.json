{"ast":null,"code":"import _slicedToArray from \"/home/user/Assignments-Zemoso/React-Practice/hooksdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/Assignments-Zemoso/React-Practice/hooksdemo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VictoryChart, VictoryLine } from 'victory';\nimport './App.css';\nimport useDebounce from './debounce';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    alignItems: 'center',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    padding: '16'\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  }\n}));\n\nfunction App() {\n  let _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      stock = _useState2[0],\n      setStock = _useState2[1];\n\n  let _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      intrest = _useState4[0],\n      setIntrest = _useState4[1];\n\n  const debouncedSearchTerm = useDebounce(intrest, 500);\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSearching = _useState6[0],\n        setIsSearching = _useState6[1];\n\n  const classes = useStyles();\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(debouncedSearchTerm, \"&interval=5min&apikey=S9C3XDXUHXF2Q4BB\"));\n      const data = await response.json();\n      if ('Time Series (5min)' in data) setStock(data);\n    }\n\n    if (debouncedSearchTerm) {\n      setIsSearching(true);\n      fetchData().then(() => setIsSearching(false));\n    }\n\n    return function cleanup() {\n      setStock(null);\n    };\n  }, [debouncedSearchTerm]);\n\n  function transformData(column) {\n    return Object.keys(stock['Time Series (5min)']).map(key => {\n      return {\n        x: new Date(key),\n        y: parseFloat(stock['Time Series (5min)'][key][column])\n      };\n    });\n  }\n\n  function handleIntrestChange(event) {\n    setIntrest(event.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: intrest,\n    onChange: handleIntrestChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), stock && !isSearching ? React.createElement(VictoryChart, {\n    data: transformData('1. open'),\n    height: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(VictoryLine, {\n    interpolation: \"linear\",\n    data: transformData('1. open'),\n    style: {\n      data: {\n        stroke: \"#c43a31\",\n        strokeWidth: 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(VictoryLine, {\n    interpolation: \"linear\",\n    data: transformData('2. high'),\n    style: {\n      data: {\n        stroke: \"#D6D60C\",\n        strokeWidth: 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" Enter a valid term to Search\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/React-Practice/hooksdemo/src/App.js"],"names":["React","useState","useEffect","makeStyles","VictoryChart","VictoryLine","useDebounce","useStyles","theme","root","display","flexWrap","flexDirection","alignItems","overflow","backgroundColor","palette","background","paper","padding","gridList","width","height","App","stock","setStock","intrest","setIntrest","debouncedSearchTerm","isSearching","setIsSearching","classes","fetchData","response","fetch","data","json","then","cleanup","transformData","column","Object","keys","map","key","x","Date","y","parseFloat","handleIntrestChange","event","target","value","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {VictoryChart,VictoryLine} from 'victory'\nimport './App.css';\nimport useDebounce from './debounce'\n\nconst useStyles = makeStyles(theme => \n  ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flexDirection: 'column',\n      alignItems:'center',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      padding: '16'\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n  }))\n\n\nfunction App() {\n  let [stock,setStock] = useState(null);\n  let [intrest,setIntrest] = useState('')\n  const debouncedSearchTerm = useDebounce(intrest, 500);\n  const [isSearching, setIsSearching] = useState(false);\n  \n  const classes = useStyles();\n\n  useEffect(()=>\n  {\n    async function fetchData()\n    {\n     \n        const response = await fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${debouncedSearchTerm}&interval=5min&apikey=S9C3XDXUHXF2Q4BB`);\n        const data = await response.json();\n        if('Time Series (5min)' in data)\n          setStock(data);\n    }\n    if(debouncedSearchTerm)\n    {\n      setIsSearching(true);\n      fetchData().then(()=>setIsSearching(false))\n    }\n\n    return function cleanup()\n    {\n      setStock(null);\n    }\n  },[debouncedSearchTerm])\n\n\n  function transformData(column)\n  {\n      return Object.keys(stock['Time Series (5min)']).map(key=>{return {x: new Date(key),y:parseFloat(stock['Time Series (5min)'][key][column]) };});\n  }\n\n  function handleIntrestChange(event)\n  {\n    setIntrest(event.target.value);\n  }\n  \n  return (\n    <div className={classes.root}>\n      <div>\n        <input value={intrest} onChange={handleIntrestChange} />\n      </div>\n      {\n      stock && !isSearching ? <VictoryChart data={transformData('1. open')} height={250}>\n      <React.Fragment>\n      <VictoryLine \n        interpolation=\"linear\"\n        data={transformData('1. open')}  \n        style={{data: {stroke: \"#c43a31\", strokeWidth: 1}}}\n      />\n      <VictoryLine \n        interpolation=\"linear\"\n        data={transformData('2. high')}  \n        style={{data: {stroke: \"#D6D60C\", strokeWidth: 1}}}\n      />\n      </React.Fragment>\n    </VictoryChart> : <div> Enter a valid term to Search</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}