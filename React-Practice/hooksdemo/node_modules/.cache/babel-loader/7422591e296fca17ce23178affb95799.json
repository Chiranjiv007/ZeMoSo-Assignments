{"ast":null,"code":"import _slicedToArray from \"/home/user/Assignments-Zemoso/React-Practice/hooksdemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/Assignments-Zemoso/React-Practice/hooksdemo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VictoryChart, VictoryLine } from 'victory';\nimport './App.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  }\n}));\n\nfunction App() {\n  let _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      stock = _useState2[0],\n      setStock = _useState2[1];\n\n  let _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      intrest = _useState4[0],\n      setIntrest = _useState4[1];\n\n  const classes = useStyles();\n  useEffect(() => {\n    async function fetchData() {\n      if (intrest) {\n        const response = await fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\".concat(intrest, \"&interval=5min&apikey=S9C3XDXUHXF2Q4BB\"));\n        const data = await response.json();\n        setStock(data);\n      }\n    }\n\n    fetchData();\n  }, [intrest, setIntrest]);\n\n  function transformData(column) {\n    if ('Time Series (5min)' in stock) {\n      return Object.keys(stock['Time Series (5min)']).map(key => {\n        return {\n          x: new Date(key),\n          y: parseFloat(stock['Time Series (5min)'][key][column])\n        };\n      });\n    }\n\n    return null;\n  }\n\n  function handleIntrestChange(event) {\n    setIntrest(event.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: intrest,\n    onChange: handleIntrestChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), stock ? React.createElement(VictoryChart, {\n    data: transformData('1. open'),\n    height: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(VictoryLine, {\n    interpolation: \"linear\",\n    data: transformData('1. open'),\n    style: {\n      data: {\n        stroke: \"#c43a31\",\n        strokeWidth: 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })) : null);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/React-Practice/hooksdemo/src/App.js"],"names":["React","useState","useEffect","makeStyles","VictoryChart","VictoryLine","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","App","stock","setStock","intrest","setIntrest","classes","fetchData","response","fetch","data","json","transformData","column","Object","keys","map","key","x","Date","y","parseFloat","handleIntrestChange","event","target","value","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {VictoryChart,VictoryLine} from 'victory'\nimport './App.css';\n\nconst useStyles = makeStyles(theme => \n  ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n  }))\n\n\nfunction App() {\n  let [stock,setStock] = useState(null);\n  let [intrest,setIntrest] = useState(null)\n  const classes = useStyles();\n\n  useEffect(()=>\n  {\n    async function fetchData()\n    {\n      if(intrest)\n      {\n        const response = await fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${intrest}&interval=5min&apikey=S9C3XDXUHXF2Q4BB`);\n        const data = await response.json();\n        setStock(data);\n      }\n    }\n    fetchData();\n  },[intrest,setIntrest])\n\n\n  function transformData(column)\n  {\n    \n    if('Time Series (5min)' in stock)\n    {\n      return Object.keys(stock['Time Series (5min)']).map(key=>{return {x: new Date(key),y:parseFloat(stock['Time Series (5min)'][key][column]) };});\n    }\n    return null;\n  }\n\n  function handleIntrestChange(event)\n  {\n    setIntrest(event.target.value);\n  }\n  \n  return (\n    <div className={classes.root}>\n      <div>\n        <input value={intrest} onChange={handleIntrestChange} />\n      </div>\n      {\n      stock ? <VictoryChart data={transformData('1. open')} height={250}>\n      <VictoryLine \n        interpolation=\"linear\"\n        data={transformData('1. open')}  \n        style={{data: {stroke: \"#c43a31\", strokeWidth: 1}}}\n      />\n    </VictoryChart>: null\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}