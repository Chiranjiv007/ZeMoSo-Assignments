{"version":3,"sources":["Login/firebase.js","logo.svg","Layout/BaseLayout.js","Forms/BasicForms.js","Models/Intern.js","MentorApp.js","AdminApp.js","Main.js","serviceWorker.js","index.js"],"names":["firebase","require","firebaseui","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","uiConfig","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","tosUrl","callbacks","signInSuccessWithAuthResult","ui","AuthUI","module","exports","startFirebaseUI","elementId","start","__webpack_require__","p","Table","_ref","list","onDelete","callBack","tag","react_default","a","createElement","className","map","item","React","id","name","rating","assignments","key","Button","_ref2","onClick","_ref2$className","children","type","MyForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myChangeHandler","event","nam","target","val","value","setState","defineProperty","postchanges","bind","assertThisInitialized","state","console","log","fields","submiturl","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","_this2","entries","slicedToArray","onChange","BaseLayout_Button","Component","largeColumn","width","midColumn","smallColumn","Intern","isExpanded","isAssignView","selections","onExpand","onCollapse","onRemoveTask","setAssignView","onSelectTask","postAssignments","response","json","lis","forEach","task","push","label","taskName","allTasks","choices","choice","internId","assignmentId","newAssignments","filter","assignment","join","style","href","description","react_select_browser_esm","isMulti","options","MentorApp","user","isLoading","interns","addUI","addTaskUI","onDismiss","addIntern","refreshUI","addTask","timer","setInterval","logout","signOut","updatedInterns","update","preventDefault","then","_this$state","isLoggedIn","BasicForms","deadline","align","email","BaseLayout_Table","AdminApp","AppBar","position","Toolbar","Typography","color","flex","displayName","Button_Button","raised","Main","role","handleLogin","onAuthStateChanged","uid","user_role","text","newLevel","slice","src_MentorApp","src_AdminApp","Boolean","window","location","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f18ade6d.chunk.js","sourcesContent":["const firebase = require('firebase')\nconst firebaseui = require('firebaseui')\n\nconst config = {\n                 apiKey: \"AIzaSyALHRUe4e80ZTgi7EuqwBzvlPEhjiDEr7U\",\n                 authDomain: \"internbuddy-c29f8.firebaseapp.com\",\n                 databaseURL: \"https://internbuddy-c29f8.firebaseio.com\",\n                 projectId: \"internbuddy-c29f8\",\n                 storageBucket: \"\",\n                 messagingSenderId: \"207196259614\",\n                 appId: \"1:207196259614:web:f6bfbb8492b0113f\"\n               };\nfirebase.initializeApp(config)\nconst auth = firebase.auth()\nconst uiConfig = ({\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  tosUrl: '/terms-of-service' ,// This doesn't exist yet\n  callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n})\nconst ui = new firebaseui.auth.AuthUI(firebase.auth())\nconst startFirebaseUI = function (elementId) {\n  ui.start(elementId, uiConfig)\n}\n\nmodule.exports = {\n  firebase,\n  auth,\n  startFirebaseUI\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\n\nconst Table = ({list,onDelete,callBack,tag})=>\n      <div className=\"table\">\n        {list.map(item=>\n          React.createElement(tag,\n          {\n           id:item.id,\n           name:item.name,\n           rating:item.rating,\n           assignments:item.assignments,\n           onDelete:onDelete,\n           callBack:callBack,\n           key:item.id\n          },null\n         )\n        )}\n      </div>\n\nconst Button = ({onClick,className=\"\",children})=>\n      <button\n        onClick={onClick}\n        className={className}\n        type=\"button\"\n      >\n        {children}\n      </button>\n\nexport{\n    Table,\n    Button\n}","import React,{Component} from 'react';\nimport {Table,Button} from '../Layout/BaseLayout.js'\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    console.log(props.fields);\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n    this.postchanges = this.postchanges.bind(this);\n  }\n\n  async postchanges(event)\n  {\n\n     if(this.props.submiturl){\n     await fetch(this.props.submiturl, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state)\n    });\n    }\n    if(this.props.callBack)\n        this.props.callBack(event,this.state);\n  }\n\n  render() {\n    return (\n      <form>{\n     Object.entries(this.props.fields).map(\n        ([key,value])=>\n        <div>\n          <p>Enter {key} </p>\n          <input\n            type={value}\n            name={key}\n            onChange={this.myChangeHandler}\n          /><br />\n        </div>\n      )\n      }\n      <br />\n      <Button onClick={this.postchanges}>Submit</Button>\n      </form>\n    );\n  }\n}\n\nexport default MyForm;","\nimport React,{Component} from 'react';\nimport Select from 'react-select';\nimport {Button} from'../Layout/BaseLayout.js'\n\nconst largeColumn = {width:'40%',};\nconst midColumn = {width:'30%',};\nconst smallColumn = {width:'10%'};\n\n\nclass Intern extends React.Component\n{\n\n\n     async componentDidMount()\n        {\n            const response = await fetch('/api/tasks/');\n            const body = await response.json();\n            const lis = []\n            body.forEach(task=>lis.push({value:task.id,label:task.taskName}))\n            this.setState({allTasks:lis});\n        }\n\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            id:props.id,\n            name:props.name,\n            rating:props.rating,\n            assignments:props.assignments,\n            isExpanded:false,\n            isAssignView:false,\n            selections:null\n        };\n        this.onExpand=this.onExpand.bind(this);\n        this.onCollapse=this.onCollapse.bind(this);\n        this.onRemoveTask=this.onRemoveTask.bind(this);\n        this.setAssignView=this.setAssignView.bind(this);\n        this.onSelectTask=this.onSelectTask.bind(this);\n        this.postAssignments=this.postAssignments.bind(this);\n        console.log(this.state.assignments);\n    }\n\n    onExpand(event)\n    {\n\n        this.setState({isExpanded:true});\n    }\n\n    onCollapse(event)\n    {\n        this.setState({isExpanded:false});\n    }\n\n   onSelectTask(choices)\n   {\n        if(choices)\n            this.setState({selections:choices.map(choice=>choice.value)});\n        else\n            this.setState({selections:[]});\n        console.log(this.state.selections);\n   }\n\n   setAssignView()\n   {\n    this.setState({isAssignView:true,selections:null});\n    console.log(this.state.selections)\n   }\n\n\n   onRemoveTask(event,internId,assignmentId)\n    {\n\n        fetch('/api/interns/'+internId+\"/remove_task\"+'?taskIds='+assignmentId,{method:'DELETE'});\n        const assignmentFilter = assignment=>assignment.id!==assignmentId;\n        const newAssignments = this.state.assignments.filter(assignmentFilter);\n        this.setState({assignments:newAssignments});\n    }\n\n\n    async postAssignments(event,internId)\n    {\n        if(this.state.selections){\n             const response = await fetch('/api/interns/'+internId+\"/assign_task\"+'?taskIds='+this.state.selections.join(),{method:'POST'});\n             const body = await response.json();\n             this.setState({isAssignView:false,assignments:body.assignments});\n        }\n        this.setState({isAssignView:false});\n    }\n\n    render()\n    {\n        if(this.state.isExpanded)\n        {\n\n            return(\n                <div key={this.state.id} className=\"table-row\">\n                          <span style={midColumn}>\n                              <a href={this.state.name}>{this.state.name}</a>\n                          </span>\n                          <span style={midColumn}>{this.state.rating}</span>\n                          <span style={largeColumn}>\n                          <Button className=\"button-inline\" onClick={this.onCollapse}>\n                               Collapse\n                           </Button><br />\n                           <ol>\n                           {\n                            this.state.assignments.map(\n                                assignment=>\n                                <li key={assignment.task.id}>\n                                    <b>{assignment.task.taskName}</b>\n                                    <br/>\n                                    {assignment.task.description}\n                                    <br/>\n                                    <Button className=\"button-inline\" onClick={(event)=>this.onRemoveTask(event,this.state.id,assignment.id)}>Remove Task</Button>\n                               </li>\n                            )\n                           }\n                           </ol>\n                           </span>\n                           <span style={smallColumn}>\n                            <Button className=\"button-inline\" onClick={()=>this.props.onDelete(this.state.id)}>\n                                Delete\n                            </Button>\n                           </span>\n                 </div>\n\n            );\n        }\n\n        if(this.state.isAssignView)\n        {\n            return(\n                <div>\n                    <Select\n                        isMulti\n                        options={this.state.allTasks}\n                        onChange={this.onSelectTask}\n                    />\n                    <br />\n                    <Button className=\"button-inline\" onClick={(event)=>this.postAssignments(event,this.state.id)}> Post Assignments </Button>\n                </div>\n            )\n        }\n\n        return(\n                <div key={this.state.id} className=\"table-row\">\n                          <span style={midColumn}>\n                             {this.state.name}\n                          </span><br/>\n                          <span style={midColumn}>{this.state.rating}</span><br />\n                          <span style={smallColumn}>\n                          <Button className=\"button-inline\" onClick={this.onExpand}>\n                               Expand\n                           </Button>\n                           </span>\n                           <span style={smallColumn}>\n                                <Button className=\"button-inline\" onClick={this.setAssignView}>\n                                    Assign Task\n                                </Button>\n                           </span>\n                           <span style={smallColumn}>\n                           <Button className=\"button-inline\" onClick={()=>this.props.onDelete(this.state.id)}>\n                               Delete\n                           </Button>\n                           </span>\n                </div>\n\n            );\n        }\n}\n\n\n\n\nexport default Intern;","import React,{Component} from 'react';\nimport MyForm from './Forms/BasicForms.js'\nimport Intern from './Models/Intern.js'\nimport {Table,Button} from'./Layout/BaseLayout.js'\nimport { auth  } from './Login/firebase.js'\nimport logo from './logo.svg';\n\n\n\nconst largeColumn = {width:'40%',};\nconst midColumn = {width:'30%',};\nconst smallColumn = {width:'10%'};\n\n//TODO: Add intern specific page\n\n\nclass MentorApp extends Component\n{\n    state={\n        user:null,\n        isLoading: true,\n        interns:[],\n        addUI:false,\n        addTaskUI:false,\n\n    };\n\n    async componentDidMount()\n    {\n        const response = await fetch('/api/interns/')\n        const body = await response.json()\n        this.setState({interns:body,isLoading:false,addUI:false});\n\n    }\n\n\n    constructor(props)\n    {\n        super(props);\n        this.state.user=props.user\n        this.onDismiss = this.onDismiss.bind(this);\n        this.addIntern = this.addIntern.bind(this);\n        this.refreshUI = this.refreshUI.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.timer = setInterval(this.refreshUI,300000)\n        this.logout = () => { auth.signOut()}\n\n\n    }\n\n\n    onDismiss(id)\n      {\n        const isNotId = item => item.id !== id;\n        const updatedInterns = this.state.interns.filter(isNotId);\n        this.setState({\n                interns:updatedInterns\n            }\n        );\n      }\n\n    async refreshUI(event,update)\n    {\n       if(event)\n        event.preventDefault();\n       const response = await fetch('/api/interns/')\n       const body = await response.json()\n       this.setState({interns:body,isLoading:false,addUI:false,addTaskUI:false});\n\n    }\n\n    addIntern()\n    {\n       this.setState({addUI:true})\n    }\n\n    addTask()\n    {\n        this.setState({addTaskUI:true})\n    }\n\n    onDelete(id)\n    {\n        fetch('/api/interns/removeintern/'+id,{method:'DELETE'}).then(this.onDismiss(id));\n    }\n\n    render()\n    {\n        const {interns,isLoading,addUI,addTaskUI,isLoggedIn}=this.state;\n        console.log(this.state.user);\n        if(addUI)\n        {\n            return (\n                <MyForm callBack={this.refreshUI} submiturl=\"/api/interns/createintern\" fields={{\"name\":\"text\",\"rating\":\"text\"}}/>\n                )\n        }\n\n        if(addTaskUI)\n        {\n            return <MyForm callBack={this.refreshUI} submiturl=\"/api/tasks/add_task\" fields={{\"taskName\":\"text\",\"description\":\"text\",\"deadline\":\"date\"}} />\n        }\n\n        return (\n\n                 <div className=\"page\">\n                 <div align=\"right\">\n                 <div> {this.state.user.email} </div>\n                 <Button className=\"button-inline\" onClick={this.logout}>Logout</Button>\n                 </div>\n                 <div className=\"table-header\">\n                 <span style={largeColumn}>\n                 <Button className=\"button-inline\" onClick={this.addIntern}>Add Interns</Button>\n                 </span>\n                 <span>\n                 <Button className=\"button-inline\" onClick={this.addTask}> Add a Task </Button>\n                 </span>\n                 </div>\n                    <h2>Interns List</h2>\n                    <div className=\"table\">\n                        <div className=\"table-header\">\n                            <span style={largeColumn}> Name </span>\n                            <span style={largeColumn}> Rating </span>\n                            <span style={largeColumn}> Tasks </span>\n                        </div>\n                        {\n                        <Table list={interns} onDelete={this.onDelete} callBack={this.refreshUI} tag={Intern} />\n                        }\n                    </div>\n                 </div>\n\n            );\n\n    }\n\n}\n\n\n\n\nexport default MentorApp;\n","import React,{Component} from 'react';\nimport { auth  } from './Login/firebase.js'\nimport {Container,AppBar,Button,Toolbar,Typography} from '@material-ui/core'\n\n\nconst theme = {\n  spacing: 8,\n}\n\nclass AdminApp extends Component\n{\n    state = {\n    user:null\n    }\n    constructor(props)\n    {\n        super(props);\n\n        this.logout = ()=>{auth.signOut()}\n    }\n    componentWillMount()\n    {\n       this.setState({user:this.props.user});\n    }\n\n    render()\n    {\n        return(<AppBar position=\"static\">\n                 <Toolbar>\n                   <Typography type=\"title\" color=\"inherit\" style={{ flex: 1 }}>\n                     Welcome {this.state.user.displayName}\n                   </Typography>\n                   <div>\n                     <Button raised color=\"accent\" onClick={this.logout}>\n                       Logout\n                     </Button>\n                   </div>\n                 </Toolbar>\n               </AppBar>\n               )\n    }\n}\n\nexport default AdminApp;","import React,{Component} from 'react';\nimport MentorApp from './MentorApp'\nimport AdminApp from './AdminApp'\nimport { auth, startFirebaseUI  } from './Login/firebase.js'\nclass Main extends React.Component\n{\n    state={\n        user:null,\n        role:null\n        };\n    constructor(props)\n    {\n        super(props);\n        this.handleLogin=this.handleLogin.bind(this);\n        auth.onAuthStateChanged((user)=>this.handleLogin(user));\n    }\n\n    async handleLogin(user)\n    {\n        this.setState({user:user});\n        if(user==null)\n            startFirebaseUI(\"#firebaseui-auth-container\");\n        else\n        {\n           const user_role = await fetch('/api/roles/rolelevel',{headers: {'uid':user.uid}});\n           const newLevel = await user_role.text()\n           //console.log(newLevel);\n           this.setState({role:newLevel.slice(1,-1)})\n        }\n    }\n\n    render()\n    {\n        if(this.state.user!==null && this.state.role!=null)\n        {\n                if(this.state.role=='ADMIN')\n                    return <MentorApp user={this.state.user}/>;\n                if(this.state.role=='ADMIN')\n                    return <AdminApp user={this.state.user}/>\n        }\n        else\n            return <div id=\"firebaseui-auth-container\"></div>;\n    }\n}\n\nexport default Main","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'firebaseui/dist/firebaseui.css'\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nif(module.hot)\n{\n  module.hot.accept()\n}"],"sourceRoot":""}