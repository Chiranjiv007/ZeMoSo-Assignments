{"ast":null,"code":"import _objectSpread from \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  taskList: [],\n  showList: [],\n  searchTerm: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      {\n        return _objectSpread({}, state, {\n          showList: action.payload,\n          taskList: action.payload\n        });\n      }\n\n    case \"CHANGE_SEARCH\":\n      {\n        return _objectSpread({}, state, {\n          showList: state.taskList.filter(value => value.task.taskName.toLowerCase().includes(action.payload)),\n          searchTerm: action.payload\n        });\n      }\n\n    case \"UPDATE_ASSIGNMENT_STATUS\":\n      {\n        return _objectSpread({}, state, {\n          taskList: [...state.taskList.slice(0, action.payload.id), _objectSpread({}, state.taskList[id], {\n            status: action.payload.status\n          }), ...state.taskList.slice(action.payload.id + 1)],\n          assignmentList: taskList\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/reducers/assignmentReducer.js"],"names":["initialState","taskList","showList","searchTerm","state","action","type","payload","filter","value","task","taskName","toLowerCase","includes","slice","id","status","assignmentList"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,QAAQ,EAAC,EAFQ;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KACf;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAmB;AACf,iCACOF,KADP;AAEIF,UAAAA,QAAQ,EAACG,MAAM,CAACE,OAFpB;AAGIN,UAAAA,QAAQ,EAACI,MAAM,CAACE;AAHpB;AAKH;;AACD,SAAK,eAAL;AAAqB;AACjB,iCACOH,KADP;AAEIF,UAAAA,QAAQ,EAACE,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CR,MAAM,CAACE,OAAlD,CAA7B,CAFb;AAGIJ,UAAAA,UAAU,EAAEE,MAAM,CAACE;AAHvB;AAKH;;AACD,SAAK,0BAAL;AACI;AACI,iCACOH,KADP;AAEIH,UAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAN,CAAea,KAAf,CAAqB,CAArB,EAAuBT,MAAM,CAACE,OAAP,CAAeQ,EAAtC,CAAJ,oBAAkDX,KAAK,CAACH,QAAN,CAAec,EAAf,CAAlD;AAAqEC,YAAAA,MAAM,EAACX,MAAM,CAACE,OAAP,CAAeS;AAA3F,cAAmG,GAAGZ,KAAK,CAACH,QAAN,CAAea,KAAf,CAAqBT,MAAM,CAACE,OAAP,CAAeQ,EAAf,GAAkB,CAAvC,CAAtG,CAFd;AAGIE,UAAAA,cAAc,EAAEhB;AAHpB;AAKH;;AACL;AAAQ;AACJ,iCAAWG,KAAX;AACH;AA1BL;AA4BH,CA9BD","sourcesContent":["const initialState = {\n    taskList:[],\n    showList:[],\n    searchTerm: \"\"\n}\n\nexport default (state = initialState, action) =>\n{\n    switch(action.type)\n    {\n        case \"UPDATE_DATA\":{\n            return {\n                ...state,\n                showList:action.payload,\n                taskList:action.payload,\n            };\n        }\n        case \"CHANGE_SEARCH\":{\n            return {\n                ...state,\n                showList:state.taskList.filter(value=>value.task.taskName.toLowerCase().includes(action.payload)),\n                searchTerm: action.payload\n            };\n        }\n        case \"UPDATE_ASSIGNMENT_STATUS\":\n            {\n                return{\n                    ...state,\n                    taskList: [...state.taskList.slice(0,action.payload.id),{...state.taskList[id],status:action.payload.status},...state.taskList.slice(action.payload.id+1)],\n                    assignmentList: taskList\n                }\n            }\n        default:{\n            return {...state};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}