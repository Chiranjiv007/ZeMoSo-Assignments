{"ast":null,"code":"import _objectSpread from \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  taskList: [],\n  showList: [],\n  searchTerm: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      {\n        return _objectSpread({}, state, {\n          showList: action.payload,\n          taskList: action.payload\n        });\n      }\n\n    case \"CHANGE_SEARCH\":\n      {\n        return _objectSpread({}, state, {\n          showList: state.taskList.filter(value => value.task.taskName.toLower().includes(action.payload)),\n          searchTerm: action.payload\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/reducers/searchReducer.js"],"names":["initialState","taskList","showList","searchTerm","state","action","type","payload","filter","value","task","taskName","toLower","includes"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,QAAQ,EAAC,EAFQ;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KACf;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAmB;AACf,iCACOF,KADP;AAEIF,UAAAA,QAAQ,EAACG,MAAM,CAACE,OAFpB;AAGIN,UAAAA,QAAQ,EAACI,MAAM,CAACE;AAHpB;AAKH;;AACD,SAAK,eAAL;AAAqB;AACjB,iCACOH,KADP;AAEIF,UAAAA,QAAQ,EAACE,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,OAApB,GAA8BC,QAA9B,CAAuCR,MAAM,CAACE,OAA9C,CAA7B,CAFb;AAGIJ,UAAAA,UAAU,EAAEE,MAAM,CAACE;AAHvB;AAKH;;AACD;AAAQ;AACJ,iCAAWH,KAAX;AACH;AAlBL;AAoBH,CAtBD","sourcesContent":["const initialState = {\n    taskList:[],\n    showList:[],\n    searchTerm: \"\"\n}\n\nexport default (state = initialState, action) =>\n{\n    switch(action.type)\n    {\n        case \"UPDATE_DATA\":{\n            return {\n                ...state,\n                showList:action.payload,\n                taskList:action.payload,\n            };\n        }\n        case \"CHANGE_SEARCH\":{\n            return {\n                ...state,\n                showList:state.taskList.filter(value=>value.task.taskName.toLower().includes(action.payload)),\n                searchTerm: action.payload\n            };\n        }\n        default:{\n            return {...state};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}