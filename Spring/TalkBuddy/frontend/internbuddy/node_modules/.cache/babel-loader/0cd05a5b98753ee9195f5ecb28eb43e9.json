{"ast":null,"code":"import _objectSpread from \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  taskList: [],\n  filters: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      {\n        return _objectSpread({}, state, {\n          showList: action.payload,\n          taskList: action.payload\n        });\n      }\n\n    case \"CHANGE_SEARCH\":\n      {\n        const new_filters = _objectSpread({}, state.filters, {\n          search: value => value.task.taskName.toLowerCase().includes(action.payload)\n        });\n\n        return _objectSpread({}, state, {\n          filters: new_filters,\n          searchTerm: action.payload\n        });\n      }\n\n    case \"CHANGE_VISIBILITY_FILTER\":\n      {\n        const new_filters = _objectSpread({}, state.filters, {\n          visibility: value => action.payload === 'ALL' || value.status === action.payload\n        });\n\n        return _objectSpread({}, state, {\n          visibility: action.payload,\n          filters: new_filters\n        });\n      }\n\n    case \"UPDATE_ASSIGNMENT_STATUS\":\n      {\n        const updatedList = [...state.taskList.slice(0, action.payload.id), {\n          id: state.taskList[action.payload.id].id,\n          status: action.payload.status,\n          task: state.taskList[action.payload.id].task\n        }, ...state.taskList.slice(action.payload.id + 1)];\n        return _objectSpread({}, state, {\n          taskList: updatedList\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/reducers/assignmentReducer.js"],"names":["initialState","taskList","filters","state","action","type","showList","payload","new_filters","search","value","task","taskName","toLowerCase","includes","searchTerm","visibility","status","updatedList","slice","id"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,OAAO,EAAC;AAFS,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KACf;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAmB;AACf,iCACOF,KADP;AAEIG,UAAAA,QAAQ,EAACF,MAAM,CAACG,OAFpB;AAGIN,UAAAA,QAAQ,EAACG,MAAM,CAACG;AAHpB;AAKH;;AACD,SAAK,eAAL;AAAqB;AACjB,cAAMC,WAAW,qBAAOL,KAAK,CAACD,OAAb;AAAqBO,UAAAA,MAAM,EAACC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CV,MAAM,CAACG,OAAlD;AAAnC,UAAjB;;AACA,iCACOJ,KADP;AAEID,UAAAA,OAAO,EAACM,WAFZ;AAGIO,UAAAA,UAAU,EAAEX,MAAM,CAACG;AAHvB;AAKH;;AACD,SAAK,0BAAL;AACI;AACI,cAAMC,WAAW,qBAAOL,KAAK,CAACD,OAAb;AAAqBc,UAAAA,UAAU,EAACN,KAAK,IAAEN,MAAM,CAACG,OAAP,KAAiB,KAAjB,IAA0BG,KAAK,CAACO,MAAN,KAAeb,MAAM,CAACG;AAAvF,UAAjB;;AACA,iCACOJ,KADP;AAEIa,UAAAA,UAAU,EAACZ,MAAM,CAACG,OAFtB;AAGIL,UAAAA,OAAO,EAACM;AAHZ;AAKH;;AACL,SAAK,0BAAL;AACI;AACI,cAAMU,WAAW,GAAG,CAAC,GAAGf,KAAK,CAACF,QAAN,CAAekB,KAAf,CAAqB,CAArB,EAAuBf,MAAM,CAACG,OAAP,CAAea,EAAtC,CAAJ,EAChB;AACCA,UAAAA,EAAE,EAACjB,KAAK,CAACF,QAAN,CAAeG,MAAM,CAACG,OAAP,CAAea,EAA9B,EAAkCA,EADtC;AAECH,UAAAA,MAAM,EAACb,MAAM,CAACG,OAAP,CAAeU,MAFvB;AAGCN,UAAAA,IAAI,EAACR,KAAK,CAACF,QAAN,CAAeG,MAAM,CAACG,OAAP,CAAea,EAA9B,EAAkCT;AAHxC,SADgB,EAMf,GAAGR,KAAK,CAACF,QAAN,CAAekB,KAAf,CAAqBf,MAAM,CAACG,OAAP,CAAea,EAAf,GAAkB,CAAvC,CANY,CAApB;AAOA,iCACOjB,KADP;AAEIF,UAAAA,QAAQ,EAAEiB;AAFd;AAIH;;AACL;AAAQ;AACJ,iCAAWf,KAAX;AACH;AA1CL;AA4CH,CA9CD","sourcesContent":["const initialState = {\n    taskList:[],\n    filters:{},\n}\n\n\n\nexport default (state = initialState, action) =>\n{\n    switch(action.type)\n    {\n        case \"UPDATE_DATA\":{\n            return {\n                ...state,\n                showList:action.payload,\n                taskList:action.payload,\n            };\n        }\n        case \"CHANGE_SEARCH\":{\n            const new_filters = {...state.filters,search:value=>value.task.taskName.toLowerCase().includes(action.payload)}\n            return {\n                ...state,\n                filters:new_filters,\n                searchTerm: action.payload\n            };\n        }\n        case \"CHANGE_VISIBILITY_FILTER\":\n            {\n                const new_filters = {...state.filters,visibility:value=>action.payload==='ALL' || value.status===action.payload}\n                return {\n                    ...state,\n                    visibility:action.payload,\n                    filters:new_filters\n                }\n            }\n        case \"UPDATE_ASSIGNMENT_STATUS\":\n            {\n                const updatedList = [...state.taskList.slice(0,action.payload.id),\n                    {\n                     id:state.taskList[action.payload.id].id,\n                     status:action.payload.status,\n                     task:state.taskList[action.payload.id].task\n                    }\n                    ,...state.taskList.slice(action.payload.id+1)]\n                return{\n                    ...state,\n                    taskList: updatedList\n                }\n            }\n        default:{\n            return {...state};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}