{"ast":null,"code":"import _objectSpread from \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  taskList: [],\n  showList: [],\n  filters: {},\n  searchTerm: \"\",\n  visibility: 'ALL'\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      {\n        return _objectSpread({}, state, {\n          showList: action.payload,\n          taskList: action.payload\n        });\n      }\n\n    case \"CHANGE_SEARCH\":\n      {\n        new_filters = _objectSpread({}, filters, {\n          search: value => value.task.taskName.toLowerCase().includes(action.payload)\n        });\n        return _objectSpread({}, state, {\n          filters: new_filters,\n          searchTerm: action.payload\n        });\n      }\n\n    case \"CHANGE_VISIBILITY_FILTER\":\n      {\n        new_filters = _objectSpread({}, filters, {\n          visibility: value => action.payload === 'ALL' || value.status === action.payload\n        });\n        return _objectSpread({}, state, {\n          visibility: action.payload,\n          filters: new_filters\n        });\n      }\n\n    case \"UPDATE_ASSIGNMENT_STATUS\":\n      {\n        const updatedList = [...state.taskList.slice(0, action.payload.id), {\n          id: state.taskList[action.payload.id].id,\n          status: action.payload.status,\n          task: state.taskList[action.payload.id].task\n        }, ...state.taskList.slice(action.payload.id + 1)];\n        return _objectSpread({}, state, {\n          taskList: updatedList,\n          showList: updatedList\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/reducers/assignmentReducer.js"],"names":["initialState","taskList","showList","filters","searchTerm","visibility","state","action","type","payload","new_filters","search","value","task","taskName","toLowerCase","includes","status","updatedList","slice","id"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,QAAQ,EAAC,EAFQ;AAGjBC,EAAAA,OAAO,EAAC,EAHS;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,UAAU,EAAC;AALM,CAArB;AAUA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KACf;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAmB;AACf,iCACOF,KADP;AAEIJ,UAAAA,QAAQ,EAACK,MAAM,CAACE,OAFpB;AAGIR,UAAAA,QAAQ,EAACM,MAAM,CAACE;AAHpB;AAKH;;AACD,SAAK,eAAL;AAAqB;AACjBC,QAAAA,WAAW,qBAAOP,OAAP;AAAeQ,UAAAA,MAAM,EAACC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CT,MAAM,CAACE,OAAlD;AAA7B,UAAX;AACA,iCACOH,KADP;AAEIH,UAAAA,OAAO,EAACO,WAFZ;AAGIN,UAAAA,UAAU,EAAEG,MAAM,CAACE;AAHvB;AAKH;;AACD,SAAK,0BAAL;AACI;AACIC,QAAAA,WAAW,qBAAOP,OAAP;AAAeE,UAAAA,UAAU,EAACO,KAAK,IAAEL,MAAM,CAACE,OAAP,KAAiB,KAAjB,IAA0BG,KAAK,CAACK,MAAN,KAAeV,MAAM,CAACE;AAAjF,UAAX;AACA,iCACOH,KADP;AAEID,UAAAA,UAAU,EAACE,MAAM,CAACE,OAFtB;AAGIN,UAAAA,OAAO,EAACO;AAHZ;AAKH;;AACL,SAAK,0BAAL;AACI;AACI,cAAMQ,WAAW,GAAG,CAAC,GAAGZ,KAAK,CAACL,QAAN,CAAekB,KAAf,CAAqB,CAArB,EAAuBZ,MAAM,CAACE,OAAP,CAAeW,EAAtC,CAAJ,EAChB;AACCA,UAAAA,EAAE,EAACd,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACE,OAAP,CAAeW,EAA9B,EAAkCA,EADtC;AAECH,UAAAA,MAAM,EAACV,MAAM,CAACE,OAAP,CAAeQ,MAFvB;AAGCJ,UAAAA,IAAI,EAACP,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACE,OAAP,CAAeW,EAA9B,EAAkCP;AAHxC,SADgB,EAMf,GAAGP,KAAK,CAACL,QAAN,CAAekB,KAAf,CAAqBZ,MAAM,CAACE,OAAP,CAAeW,EAAf,GAAkB,CAAvC,CANY,CAApB;AAOA,iCACOd,KADP;AAEIL,UAAAA,QAAQ,EAAEiB,WAFd;AAGIhB,UAAAA,QAAQ,EAAEgB;AAHd;AAKH;;AACL;AAAQ;AACJ,iCAAWZ,KAAX;AACH;AA3CL;AA6CH,CA/CD","sourcesContent":["const initialState = {\n    taskList:[],\n    showList:[],\n    filters:{},\n    searchTerm: \"\",\n    visibility:'ALL'\n}\n\n\n\nexport default (state = initialState, action) =>\n{\n    switch(action.type)\n    {\n        case \"UPDATE_DATA\":{\n            return {\n                ...state,\n                showList:action.payload,\n                taskList:action.payload,\n            };\n        }\n        case \"CHANGE_SEARCH\":{\n            new_filters = {...filters,search:value=>value.task.taskName.toLowerCase().includes(action.payload)}\n            return {\n                ...state,\n                filters:new_filters,\n                searchTerm: action.payload\n            };\n        }\n        case \"CHANGE_VISIBILITY_FILTER\":\n            {\n                new_filters = {...filters,visibility:value=>action.payload==='ALL' || value.status===action.payload}\n                return {\n                    ...state,\n                    visibility:action.payload,\n                    filters:new_filters\n                }\n            }\n        case \"UPDATE_ASSIGNMENT_STATUS\":\n            {\n                const updatedList = [...state.taskList.slice(0,action.payload.id),\n                    {\n                     id:state.taskList[action.payload.id].id,\n                     status:action.payload.status,\n                     task:state.taskList[action.payload.id].task\n                    }\n                    ,...state.taskList.slice(action.payload.id+1)]\n                return{\n                    ...state,\n                    taskList: updatedList,\n                    showList: updatedList\n                }\n            }\n        default:{\n            return {...state};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}