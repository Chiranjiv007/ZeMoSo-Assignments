{"ast":null,"code":"import _objectSpread from \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  assignmentList: [],\n  searchTerm: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      {\n        return _objectSpread({}, state, {\n          taskList: action.payload\n        });\n      }\n\n    case \"CHANGE_SEARCH\":\n      {\n        return _objectSpread({}, state, {\n          taskList: state.assignmentList.filter(value => value.task.taskName.includes(action.payload)),\n          searchTerm: action.payload\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/reducers/searchReducer.js"],"names":["initialState","assignmentList","searchTerm","state","action","type","taskList","payload","filter","value","task","taskName","includes"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAC,EADE;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KACf;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,aAAL;AAAmB;AACf,iCACOF,KADP;AAEIG,UAAAA,QAAQ,EAACF,MAAM,CAACG;AAFpB;AAIH;;AACD,SAAK,eAAL;AAAqB;AACjB,iCACOJ,KADP;AAEIG,UAAAA,QAAQ,EAACH,KAAK,CAACF,cAAN,CAAqBO,MAArB,CAA4BC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,QAApB,CAA6BR,MAAM,CAACG,OAApC,CAAnC,CAFb;AAGIL,UAAAA,UAAU,EAAEE,MAAM,CAACG;AAHvB;AAKH;;AACD;AAAQ;AACJ,iCAAWJ,KAAX;AACH;AAjBL;AAmBH,CArBD","sourcesContent":["const initialState = {\n    assignmentList:[],\n    searchTerm: \"\"\n}\n\nexport default (state = initialState, action) =>\n{\n    switch(action.type)\n    {\n        case \"UPDATE_DATA\":{\n            return {\n                ...state,\n                taskList:action.payload\n            };\n        }\n        case \"CHANGE_SEARCH\":{\n            return {\n                ...state,\n                taskList:state.assignmentList.filter(value=>value.task.taskName.includes(action.payload)),\n                searchTerm: action.payload\n            };\n        }\n        default:{\n            return {...state};\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}