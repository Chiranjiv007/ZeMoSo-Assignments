{"ast":null,"code":"const firebase = require('firebase');\n\nconst firebaseui = require('firebaseui');\n\nconst config = {\n  apiKey: \"AIzaSyALHRUe4e80ZTgi7EuqwBzvlPEhjiDEr7U\",\n  authDomain: \"internbuddy-c29f8.firebaseapp.com\",\n  databaseURL: \"https://internbuddy-c29f8.firebaseio.com\",\n  projectId: \"internbuddy-c29f8\",\n  storageBucket: \"\",\n  messagingSenderId: \"207196259614\",\n  appId: \"1:207196259614:web:f6bfbb8492b0113f\"\n};\nfirebase.initializeApp(config);\nconst auth = firebase.auth();\n/*\nconst uiConfig = ({\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  tosUrl: '/terms-of-service' ,// This doesn't exist yet\n  callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n})*/\n\nconst oneTapConfig = {\n  signInOptions: [{\n    // Google provider must be enabled in Firebase Console to support one-tap\n    // sign-up.\n    provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // Required to enable this provider in one-tap sign-up.\n    authMethod: 'https://accounts.google.com',\n    // Required to enable ID token credentials for this provider.\n    // This can be obtained from the Credentials page of the Google APIs\n    // console.\n    clientId: ''\n  }],\n  // Required to enable one-tap sign-up credential helper.\n  credentialHelper: firebaseui.auth.CredentialHelper.GOOGLE_YOLO,\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nconst startFirebaseUI = function (elementId) {\n  ui.start(elementId, oneTapConfig);\n};\n\nmodule.exports = {\n  firebase,\n  auth,\n  startFirebaseUI\n};","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/Login/firebase.js"],"names":["firebase","require","firebaseui","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","oneTapConfig","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","credentialHelper","CredentialHelper","GOOGLE_YOLO","callbacks","signInSuccessWithAuthResult","ui","AuthUI","startFirebaseUI","elementId","start","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AAEA,MAAME,MAAM,GAAG;AACEC,EAAAA,MAAM,EAAE,yCADV;AAEEC,EAAAA,UAAU,EAAE,mCAFd;AAGEC,EAAAA,WAAW,EAAE,0CAHf;AAIEC,EAAAA,SAAS,EAAE,mBAJb;AAKEC,EAAAA,aAAa,EAAE,EALjB;AAMEC,EAAAA,iBAAiB,EAAE,cANrB;AAOEC,EAAAA,KAAK,EAAE;AAPT,CAAf;AASAV,QAAQ,CAACW,aAAT,CAAuBR,MAAvB;AACA,MAAMS,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACA;;;;;;;;;;;;;AAaA,MAAMC,YAAY,GAClB;AACIC,EAAAA,aAAa,EAAE,CACX;AACE;AACA;AACAC,IAAAA,QAAQ,EAAEf,QAAQ,CAACY,IAAT,CAAcI,kBAAd,CAAiCC,WAH7C;AAIE;AACAC,IAAAA,UAAU,EAAE,6BALd;AAME;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE;AATZ,GADW,CADnB;AAcM;AACAC,EAAAA,gBAAgB,EAAElB,UAAU,CAACU,IAAX,CAAgBS,gBAAhB,CAAiCC,WAfzD;AAgBMC,EAAAA,SAAS,EAAE;AACH;AACAC,IAAAA,2BAA2B,EAAE,MAAM;AAFhC;AAhBjB,CADA;AAwBA,MAAMC,EAAE,GAAG,IAAIvB,UAAU,CAACU,IAAX,CAAgBc,MAApB,CAA2B1B,QAAQ,CAACY,IAAT,EAA3B,CAAX;;AACA,MAAMe,eAAe,GAAG,UAAUC,SAAV,EAAqB;AAC3CH,EAAAA,EAAE,CAACI,KAAH,CAASD,SAAT,EAAoBf,YAApB;AACD,CAFD;;AAIAiB,MAAM,CAACC,OAAP,GAAiB;AACf/B,EAAAA,QADe;AAEfY,EAAAA,IAFe;AAGfe,EAAAA;AAHe,CAAjB","sourcesContent":["const firebase = require('firebase')\nconst firebaseui = require('firebaseui')\n\nconst config = {\n                 apiKey: \"AIzaSyALHRUe4e80ZTgi7EuqwBzvlPEhjiDEr7U\",\n                 authDomain: \"internbuddy-c29f8.firebaseapp.com\",\n                 databaseURL: \"https://internbuddy-c29f8.firebaseio.com\",\n                 projectId: \"internbuddy-c29f8\",\n                 storageBucket: \"\",\n                 messagingSenderId: \"207196259614\",\n                 appId: \"1:207196259614:web:f6bfbb8492b0113f\"\n               };\nfirebase.initializeApp(config)\nconst auth = firebase.auth()\n/*\nconst uiConfig = ({\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  tosUrl: '/terms-of-service' ,// This doesn't exist yet\n  callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n})*/\n\nconst oneTapConfig =\n{\n    signInOptions: [\n        {\n          // Google provider must be enabled in Firebase Console to support one-tap\n          // sign-up.\n          provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n          // Required to enable this provider in one-tap sign-up.\n          authMethod: 'https://accounts.google.com',\n          // Required to enable ID token credentials for this provider.\n          // This can be obtained from the Credentials page of the Google APIs\n          // console.\n          clientId: ''\n        },\n      ],\n      // Required to enable one-tap sign-up credential helper.\n      credentialHelper: firebaseui.auth.CredentialHelper.GOOGLE_YOLO,\n      callbacks: {\n              // Avoid redirects after sign-in.\n              signInSuccessWithAuthResult: () => false\n            }\n}\n\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth())\nconst startFirebaseUI = function (elementId) {\n  ui.start(elementId, oneTapConfig)\n}\n\nmodule.exports = {\n  firebase,\n  auth,\n  startFirebaseUI\n}"]},"metadata":{},"sourceType":"module"}