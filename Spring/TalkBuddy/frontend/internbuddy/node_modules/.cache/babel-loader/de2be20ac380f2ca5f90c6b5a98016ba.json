{"ast":null,"code":"var _jsxFileName = \"/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/Login/firebase.js\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport React from 'react';\nimport firebase from 'firebase';\nconst config = {\n  apiKey: \"AIzaSyALHRUe4e80ZTgi7EuqwBzvlPEhjiDEr7U\",\n  authDomain: \"internbuddy-c29f8.firebaseapp.com\",\n  databaseURL: \"https://internbuddy-c29f8.firebaseio.com\",\n  projectId: \"internbuddy-c29f8\",\n  storageBucket: \"\",\n  messagingSenderId: \"207196259614\",\n  appId: \"1:207196259614:web:f6bfbb8492b0113f\"\n};\nfirebase.initializeApp(config);\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uiConfig: {\n        // Popup signin flow rather than redirect flow.\n        signInFlow: 'popup',\n        // We will display Google and Facebook as auth providers.\n        signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n        callbacks: {\n          // Avoid redirects after sign-in.\n          signInSuccessWithAuthResult: () => {\n            props.onLogin();\n            return false;\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(StyledFirebaseAuth, {\n      uiConfig: this.state.uiConfig,\n      firebaseAuth: firebase.auth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/user/Assignments-Zemoso/Spring/TalkBuddy/frontend/internbuddy/src/Login/firebase.js"],"names":["StyledFirebaseAuth","React","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","Login","Component","constructor","props","state","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","onLogin","render"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,MAAMC,MAAM,GAAG;AACEC,EAAAA,MAAM,EAAE,yCADV;AAEEC,EAAAA,UAAU,EAAE,mCAFd;AAGEC,EAAAA,WAAW,EAAE,0CAHf;AAIEC,EAAAA,SAAS,EAAE,mBAJb;AAKEC,EAAAA,aAAa,EAAE,EALjB;AAMEC,EAAAA,iBAAiB,EAAE,cANrB;AAOEC,EAAAA,KAAK,EAAE;AAPT,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;;AACA,MAAMS,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CACA;AAGIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACRC,MAAAA,QAAQ,EAAC;AACG;AACAC,QAAAA,UAAU,EAAE,OAFf;AAGG;AACAC,QAAAA,aAAa,EAAE,CACbjB,QAAQ,CAACkB,IAAT,CAAcC,iBAAd,CAAgCC,WADnB,CAJlB;AAOGC,QAAAA,SAAS,EAAE;AACT;AACAC,UAAAA,2BAA2B,EAAE,MAAI;AAAET,YAAAA,KAAK,CAACU,OAAN;AAAiB,mBAAO,KAAP;AAAa;AAFxD;AAPd;AADD,KAAb;AAeH;;AAEDC,EAAAA,MAAM,GACN;AACI,WAAQ,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,QAAzC;AAAmD,MAAA,YAAY,EAAEf,QAAQ,CAACkB,IAAT,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AA1BL;;AA6BA,eAAeR,KAAf","sourcesContent":["import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport React from 'react';\nimport firebase from 'firebase';\nconst config = {\n                 apiKey: \"AIzaSyALHRUe4e80ZTgi7EuqwBzvlPEhjiDEr7U\",\n                 authDomain: \"internbuddy-c29f8.firebaseapp.com\",\n                 databaseURL: \"https://internbuddy-c29f8.firebaseio.com\",\n                 projectId: \"internbuddy-c29f8\",\n                 storageBucket: \"\",\n                 messagingSenderId: \"207196259614\",\n                 appId: \"1:207196259614:web:f6bfbb8492b0113f\"\n               };\n\nfirebase.initializeApp(config);\nclass Login extends React.Component\n{\n\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n             uiConfig:{\n                         // Popup signin flow rather than redirect flow.\n                         signInFlow: 'popup',\n                         // We will display Google and Facebook as auth providers.\n                         signInOptions: [\n                           firebase.auth.EmailAuthProvider.PROVIDER_ID,\n                         ],\n                         callbacks: {\n                           // Avoid redirects after sign-in.\n                           signInSuccessWithAuthResult: ()=>{ props.onLogin(); return false}\n                         }\n                       }\n        };\n\n    }\n\n    render()\n    {\n        return (<StyledFirebaseAuth uiConfig={this.state.uiConfig} firebaseAuth={firebase.auth()} />);\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}